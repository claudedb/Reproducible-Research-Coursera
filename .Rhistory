source("cube.R")
source("cube.R")
source("cube.R")
z<-10
f(3)
load.csv("data/specdata")
read.csv("data/specdata")
read.csv("/Data/specdata")
read.csv("Data/specdata")
read.csv("Data/specdata/1")
read.csv("Data/specdata/001")
read.csv("Data/specdata/001.csv")
read.csv("Data/specdata/015.csv")
read.csv("Data/specdata/332.csv")
source("pollutantmean.R")
source("pllutantmean.R")
source("pollutantmean.R")
pollutantmean("Data/specdata","nitrate",1)
source('~/Desktop/Coursera/pollutantmean.R')
ls()
pollutantmean("Data/specdata","nitrate",1:10)
pollutantmean("Data/specdata","sulfate",1:10)
pollutantmean("Data/specdata","nitrate",70:72)
pollutantmean("Data/specdata","nitrate",23)
pollutantmean("Data/specdata","nitrate")
source('~/Desktop/Coursera/complete.R')
complete("Data/specdata",1)
source('~/Desktop/Coursera/complete.R')
complete("Data/specdata",1)
complete.cases(airquality)
source('~/Desktop/Coursera/corr.R')
source('~/Desktop/Coursera/complete.R')
cr<-corr("Data/specdata",150)
source('~/Desktop/Coursera/corr.R')
cr<-corr("Data/specdata",150)
head(cr)
nobs
summary(cr)
data<-read.csv("Data/specdata/001.csv")
nobs<-complete.cases(data)
nobs
sum(nobs)
temp<-data[nobs]
temp<-data[,nobs]
temp<-data[nobs,]
temp
cor(temp$sulfate,temp$nitrate)
source('~/Desktop/Coursera/corr.R')
cr<-corr("Data/specdata",150)
head(cr)
cr
temp
source('~/Desktop/Coursera/corr.R')
cr<-corr("Data/specdata",150)
head(cr)
source('~/Desktop/Coursera/complete.R')
source('~/Desktop/Coursera/corr.R')
cr<-corr("Data/specdata",150)
source('~/Desktop/Coursera/corr.R')
cr<-corr("Data/specdata",150)
head(cr)
data<-read.csv("Data/specdata/001.csv")
data<-data[complete.cases(data),]
data
cr<-cor(data$sulfate, data$nitrate)
cr
data<-read.csv("Data/specdata/002.csv")
data<-data[complete.cases(data),]
cr<-c(cr, cor(data$sulfate, data$nitrate))
cr
source('~/Desktop/Coursera/corr.R')
corr("Data/specdata")
nrow(data)
cr
source('~/Desktop/Coursera/corr.R')
source('~/Desktop/Coursera/corr.R')
corr("data/specdata",150)
source('~/Desktop/Coursera/complete.R')
source('~/Desktop/Coursera/pollutantmean.R')
pollutantmean("specdata","nitrate",10:15)
corr("specdata",150)
fichier<-list.files(specdata, full.name=TRUE)
fichier<-list.files("specdata", full.name=TRUE)
data<-read.csv(fichier[3])
data<-data[complete.cases(data),]
data
nrow(data)
cor(data$sulfate,data$nitrate)
cr<-(cr,23)
cr<-c(cr,23)
cr<-cor(data$sulfate, data$nitrate)
cr<-c(cr,23)
cr
source('~/Desktop/Coursera/corr.R')
corr("specdata",150)
head(cr)
ls()
rm(list=ls())
ls
ls()
source('~/Desktop/Coursera/corr.R')
corr("specdata",150)
cr
head(cr)
source('~/Desktop/Coursera/corr.R')
corr("specdata",150)
source('~/Desktop/Coursera/corr.R')
corr("specdata",150)
fichier<-list.files("specdata",full.name=TRUE)
length(fichier)
source('~/Desktop/Coursera/corr.R')
corr("specdata",150)
cr<-corr("specdata",150)
head(cr)
summary(cr)
cr<-corr("specdata",400)
head(cr)
source('~/Desktop/Coursera/rprog-scripts-submitscript1.R')
submit()
submit()
submit()
submit()
submit()
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
source('~/Desktop/Coursera/complete.R')
complete("specdata",c(2,4,8,10,12))
submit()
submit()
submit()
submit()
submit()
submit()
libraty(dataset)
library(datasets)
data("iris")
?iris
Sepal.length$virginica
iris
u<-iris[virginica]
u<-iris["virginica"]
u<-iris$species[virginica]
u<-iris$species["virginica"]
u
u<-iris[iris$species="virginica"]
u<-iris[iris$species=="virginica"]
u
u<-iris['virginica',]
u
u<-iris[,'virginica']
u<-iris[iris$species='virginica',]
u<-iris[iris$species=='virginica',]
u
u<-iris[iris$species=='virginica']
u<-iris[iris$species=='setosa']
u
u<=iris$species['virginica']
u<=iris$species["virginica"]
u<-iris$species["virginica"]
u<-iris$species[iris$Species="virginica"]
u<-iris$species[iris$Species=="virginica"]
u
u<-iris$species[iris[,5]=="virginica"]
u<-iris[,5]
u
u(u=="virginica")
z<-u[u=="virginica"]
z
iris[z]
virginica<-subset(iris, species=="virginica")
virginica<-subset(iris, Species=="virginica")
summary(virginica)
g<-apply(iris[,1:4],1,mean)
g
g<-apply(iris[,1:4],2,mean)
g
colMeans(iris)
g<-(iris,2,mean)
g<-(iris, 2, mean)
data(mtcars)
l<-tapply(mtcars$mpg,mtcars$cyl,mean)
l
g<-with(mtcars, tapply(mpg, cyl, mean))
g
g[1]-g[3]
g<-with(mtcars, tapply(hp, cyl, mean))
g
g[1]-g[3]
set.seed(1)
rpois(5,2)
getwd()
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
head(outcome)
outcome[,11]<- as.numeric(outcome[,11])
hist(outcome[,11])
source('~/Desktop/Coursera/Best.R')
source('~/Desktop/Coursera/rankall.R')
source('~/Desktop/Coursera/rankhospital.R')
best("TX","heart attack")
source('~/Desktop/Coursera/Best.R')
best("TX,"heat attack)
best("TX,"heat attack)
best("TX,"heat attack")
best("TX,"heart attack")
best("TX","heart attack")
source('~/Desktop/Coursera/Best.R')
best("TX","heart attack")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
source("submitscript3.R")
source("submitscript3.R")
source('~/Desktop/Coursera/rprog-scripts-submitscript3.R')
submit()
submit()
submit()
submit()
source('~/Desktop/Coursera/rankhospital.R')
submit()
submit()
submit()
submit()
submit()
submit()
submit()
install.packages('RMYSQL')
install.packages('RMySQL')
ucscDb<-dcConnect(MySQL(),user='genome', host='genome-mysql.cse.ucsc.edy')
ucscDb<-dbConnect(MySQL(),user='genome', host='genome-mysql.cse.ucsc.edy')
library('MySQL')
library('RMySQL')
ucscDb<-dbConnect(MySQL(),user='genome', host='genome-mysql.cse.ucsc.edy')
ucscDb<-dbConnect(MySQL(),user='genome', host='genome-mysql.cse.ucsc.edu')
result<-dbGetQuery(ucscDb,'Show databases;'); dbDisconnect(ucscDb);
results
result
hg19<-dbConnect(MySQL(),user='genome',db='hg19',host='genome-mysql.cse.ucsc.edu')
allTables<-dbListTables(hg19)
length(allTables)
allTables[1:5]
source('http://bioconductor.org/biocLite.R')
biocLite('rhdf5')
library(rhdf5)
created=h5createFile('example.h5')
created
install.packages('httr')
source('~/Desktop/Coursera/week2quiz.R')
oauth_endpoints('github')
myapp<-oauth_app('github',key='e2244cd8a41e03cd885b',secret='7314165f4f4670a81ffbbdd4a4e8062f00949a29')
gitub_token<-oauth2.0_token(oauth_endpoints('github'),myapp)
gtoken<-config(token=github_token)
req<-GET('https://api.github.com/rate_limit',gtoken)
stop_for_status(req)
content(req)
source('~/Desktop/Coursera/week2quiz.R')
oauth_endpoints('github')
myapp<-oauth_app('github',key='e2244cd8a41e03cd885b',secret='7314165f4f4670a81ffbbdd4a4e8062f00949a29')
gitub_token<-oauth2.0_token(oauth_endpoints('github'),myapp)
gtoken<-config(token=github_token)
req<-GET('https://api.github.com/rate_limit',gtoken)
stop_for_status(req)
content(req)
BROWSE('https://api.github.com/users/jtleek/repos',authenticate('Access Token','x-oauth-basic','basic'))
source('~/Desktop/Coursera/week2quiz.R')
source('~/Desktop/Coursera/week2quiz.R')
library(httr)
oauth_endpoints('github')
myapp<-oauth_app('github',key='e2244cd8a41e03cd885b',secret='7314165f4f4670a81ffbbdd4a4e8062f00949a29')
source('~/Desktop/Coursera/week2quiz.R')
library(httr)
oauth_endpoints('github')
myapp<-oauth_app('github',key='e2244cd8a41e03cd885b',secret='7314165f4f4670a81ffbbdd4a4e8062f00949a29')
github_token<-oauth2.0_token(oauth_endpoints('github'),myapp)
gtoken<-config(token=github_token)
req<-GET('https://api.github.com/rate_limit',gtoken)
stop_for_status(req)
content(req)
source('~/Desktop/Coursera/week2quiz.R')
source('~/Desktop/Coursera/week2quiz.R')
library(httr)
oauth_endpoints('github')
myapp<-oauth_app('github',key='e2244cd8a41e03cd885b',secret='7314165f4f4670a81ffbbdd4a4e8062f00949a29')
github_token<-oauth2.0_token(oauth_endpoints('github'),myapp)
library(httr)
oauth_endpoints('github')
myapp<-oauth_app('github',key='e2244cd8a41e03cd885b',secret='7314165f4f4670a81ffbbdd4a4e8062f00949a29')
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages('sqlf')
install.packages('sqldf')
acs<-read.csv('/DATA/week2data.csv')
acs<-read.csv('week2data.csv')
head(acs)
question2<-sqldf('select pwgtp1 from acs where AGEP>50')
librart(sqldf)
library(sqldf)
question2<-sqldf('select pwgtp1 from acs where AGEP>50')
question2<-sqldf('select pwgtp1 from acs where AGEP>50')
acs<-read.csv('week2data.csv')
head(acs)
library(sqldf)
question2<-sqldf('select pwgtp1 from acs where AGEP>50')
source('~/Desktop/Coursera/week2quiz.R')
source('~/Desktop/Coursera/week2quiz.R')
hurl<-'http://biostat.jhsph.edu/~jleek/contact.html'
con<-url(hurl)
htmlCode<-readlines(con)
htmlCode<-readLines(con)
close(con)
sapply(htmlCode[c(10,20,30,100)],nchar)
q5<-read.csv('week2data2.for',header=T)
q5
header(q5)
head(q5)
View(q5)
View(q5)
q5_2<-read.fwf('week2data2.for',widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),skip=4)
head(q5_2)
sum(q5_2[,4])
library(swirl)
install.packages('swirl')
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind,data=airquality)
xyplot(Ozone~Wind,data=airquality,col='red',pch=8,main='Big Apple Data')
xyplot(Ozone~Wind,data=airquality,pch=8,,col='red',main='Big Apple Data')
xyplot(Ozone~Wind | as.factor(Month),data=airquality,layout=c(5,1))
xyplot(Ozone~Wind | Month,data=airquality,layout=c(5,1))
p<-xyplot(Ozone~Wind, data=airquality)
print(p)
names(p)
mynames[myfull]
p[['formula']]
p[[x.limits]]
p[['x.limits']]
table(f)
xyplot(y~x|f,layou=c(2,1))
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit('plot1.R')
source('plot1.R',local=TRUE)
source('plot1.R',local=TRUE)
source(pathtofile('plot1.R'),local=TRUE)
myedit('plot2.R')
source(pathtofile('plot2.R'),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamond$color,diamonds$cut)
table(diamonds$color,diamonds$cut)
myedit('myLabels.R')
source(pathtofile('myLabels.R'),local=TRUE)
xyplot(price~carat|color*cut, data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut, data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
install.packages('knitr')
library(knitr)
setwd("~/Documents/R Programming/Reproducible Research/Reproducible-Research-Coursera")
activity.data<-read.csv('~/Documents/R Programming/Reproducible Research/activity.csv')
View(activity.data)
View(activity.data)
activity.data$date<-as.date(as.character(activity.data$date),'%Y%m%d')
View(activity.data)
activity.data$date<-as.Date(as.Character(activity.data$date),'%Y-%m-%d')
activity.data$date<-as.Date(as.character(activity.data$date),'%Y-%m-%d')
View(activity.data)
View(activity.data)
steps<-aggregate(steps~date,activity.data,sum,na.rm=F)
View(steps)
hist(x=steps$steps)
hist(steps$date,height=steps$steps)
hist(steps$date,height=steps$steps,breaks='days')
hist(steps$date,breaks='days')
hist(steps$date)
steps.perday<-aggregate(steps~date,activity.data,sum,na.rm=F)
hist(steps.perday$steps,,main='Total number of steps taken daily',xlab='Days',ylab='Number of step')
hist(steps.perday$steps,,main='Total number of steps taken daily',xlab='Number of steps',ylab='Number of Days')
hist(steps.perday$steps,breaks=10,main='Total number of steps taken daily',xlab='Number of steps',ylab='Number of Days')
steps.interval<-aggregate(steps~interval,activity.data,mean)
with(steps.interval,plot(interval,steps,type='l',xlab='Interval',ylab='Number of steps',main='Average number of steps (all days) per interval'))
steps.interval<-aggregate(steps~interval,activity.data,na.rm=F,mean)
with(steps.interval,plot(interval,steps,type='l',xlab='Interval',ylab='Number of steps',main='Average number of steps (all days) per interval'))
View(steps.interval)
highest.interval<-steps.interval[steps==max(steps),1]
max.steps<-max(steps.inteval$steps)
steps.interval<-aggregate(steps~interval,activity.data,na.rm=F,mean)
with(steps.interval,plot(interval,steps,type='l',xlab='Interval',ylab='Number of steps',main='Average number of steps (all days) per interval'))
max.steps<-max(steps.inteval$steps)
max.interval<-steps.interval[steps==max.steps,1]
max.steps<-max(steps.interval$steps)
max.interval<-steps.interval[steps==max.steps,1]
max.interval<-steps.interval[which.max(steps.interval$steps),1]
max.interval
number.NA<-sum(is.na(activity.data))
weekday<-as.factor(weekdays(activity.data$date))
mean.NA<-mean(is.na(activity.data))
imputed.activity$steps[is.na(imputed.activity.data$steps)]<-steps.interval[imputed.activity$steps[is.na(imputed.activity.data$steps)]]
imputed.activity.data$steps[is.na(imputed.activity.data$steps)]<-steps.interval[imputed.activity.data$steps[is.na(imputed.activity.data$steps)]]
imputed.activity.data<-activity.data
imputed.activity.data$steps[is.na(imputed.activity.data$steps)]<-steps.interval[imputed.activity.data$steps[is.na(imputed.activity.data$steps)]]
View(steps.interval)
imputed.activity.data$steps[is.na(imputed.activity.data$steps)]<-steps.interval[imputed.activity.data$steps[is.na(imputed.activity.data$steps)],2]
View(imputed.activity.data)
number.NA<-sum(is.na(activity.data))
mean.NA<-mean(is.na(activity.data))
imputed.activity.data<-activity.data
imputed.activity.data$steps[is.na(imputed.activity.data$steps)]<-steps.interval[imputed.activity.data$steps[is.na(imputed.activity.data$steps)],2]
View(steps)
number.NA<-sum(is.na(activity.data))
mean.NA<-mean(is.na(activity.data))
NA.steps<-is.na(activity.data$steps)
imputed.activity.data<-activity.data
imputed.activity.data$steps[NA.steps]<-steps.interval[imputed.activity.data$steps[NA.steps],2]
View(imputed.activity.data)
number.NA<-sum(is.na(activity.data))
mean.NA<-mean(is.na(activity.data))
NA.steps<-is.na(activity.data$steps)
imputed.activity.data<-activity.data
imputed.activity.data$steps[NA.steps]<-steps.interval[as.character(imputed.activity.data$steps[NA.steps]),2]
View(imputed.activity.data)
umber.NA<-sum(is.na(activity.data))
mean.NA<-mean(is.na(activity.data))
NA.steps<-is.na(activity.data$steps)
imputed.activity.data<-activity.data
#imputed.activity.data$steps[NA.steps]<-
trying<-match(imputed.activity.data$interval[NA.st
)
trying<-match(imputed.activity.data$interval[NA.steps],steps.interval)
trying
imputed.activity.data<-merge(activity.data,steps.interval, by='interval')
View(imputed.activity.data)
imputed.activity.data$steps.x[NA.steps]<-imputed.activity.data$steps.y[NA.steps]
View(imputed.activity.data)
number.NA<-sum(is.na(activity.data))
mean.NA<-mean(is.na(activity.data))
NA.steps<-is.na(activity.data$steps)
imputed.activity.data<-merge(activity.data,steps.interval, by='interval')
imputed.activity.data$steps.x[is.na(imputed.activity.
)
k
number.NA<-sum(is.na(activity.data))
mean.NA<-mean(is.na(activity.data))
NA.steps<-is.na(activity.data$steps)
imputed.activity.data<-merge(activity.data,steps.interval, by='interval')
imputed.activity.data$steps.x[is.na(imputed.activity.data$steps.x)]<-imputed.activity.data$steps.y[is.na(imputed.activity.data$steps.x)]
View(imputed.activity.data)
number.NA<-sum(is.na(activity.data))
mean.NA<-mean(is.na(activity.data))
NA.steps<-is.na(activity.data$steps)
imputed.activity.data<-merge(activity.data,steps.interval, by='interval')
number.NA<-sum(is.na(activity.data))
mean.NA<-mean(is.na(activity.data))
imputed.activity.data<-merge(activity.data,steps.interval, by='interval')
imputed.activity.data$steps.x[which(is.na(imputed.activity.data$steps.x))]<-imputed.activity.data$steps.y[which(is.na(imputed.activity.data$steps.x))]
imputed.activity.data<-merge(activity.data,steps.interval, by='interval')
NA.steps<-which(is.na(imputed.activity.data$steps.x))
essai<-imputed.activity.data$steps.x[NA.steps]
imputed.activity.data<-merge(activity.data,steps.interval, by='interval')
NA.steps<-which(is.na(imputed.activity.data$steps.x))
essai<-imputed.activity.data$steps.x[NA.steps]
imputed.activity.data$steps.x[NA.steps]<-imputed.activity.data$steps.y[NA.steps]
View(imputed.activity.data)
imputed.activity.data<-imputed.activity.data[,1:3]
imputed.daily.steps<-aggregate(steps.x~date,imputed.activity.data,sum)
View(imputed.daily.steps)
imputed.activity.data<-merge(activity.data,steps.interval, by='interval')
NA.steps<-which(is.na(imputed.activity.data$steps.x))
imputed.activity.data$steps.x[NA.steps]<-round(imputed.activity.data$steps.y[NA.steps])
imputed.activity.data<-imputed.activity.data[,1:3]
imputed.daily.steps<-aggregate(steps.x~date,imputed.activity.data,sum)
mean.daily.steps<-mean(imputed.daily.steps$steps.x)
median.daily.steps<-median(imputed.daily.steps$steps.x)
hist(imputed.daily.steps$steps.x,col='red',main='Total number of steps taken daily',xlab='Number of steps',ylab='Number of Days')
hist(imputed.daily.steps$steps.x,col='red',breaks=10,main='Total number of steps taken daily',xlab='Number of steps',ylab='Number of Days')
hist(imputed.daily.steps$steps.x,col='red',breaks=10,main='Total number of steps taken daily (NA replaced by interval mean)',xlab='Number of steps',ylab='Number of Days')
imputed.activity.data$weekday<-as.factor(weekdays(imputed.activity.data$date))
weekday.name<-c('Monday','Tuesday','Wednesday','Thursday','Friday')
imputed.activity.data$weekend<-ifelse(imputed.activity.data$weekday %in% weekday.name,'Weekday','Weekend')
View(imputed.activity.data)
imputed.activity.data$weekday<-as.factor(weekdays(imputed.activity.data$date))
weekday.name<-c('Monday','Tuesday','Wednesday','Thursday','Friday')
imputed.activity.data$weekend<-ifelse(imputed.activity.data$weekday %in% weekday.name,'Weekday','Weekend')
imputed.interval.mean<-aggregate(steps~interval+weekend,imputed.activity.data,mean)
par(mrow=c(1,2))
with(imputed.interval.mean[weekend=='Weekend'],plot(steps,interval,type='l',col='red'))
with(imputed.interval.mean[weekend=='Weekday'],plot(steps,interval,type='l',col='green'))
imputed.activity.data$weekday<-as.factor(weekdays(imputed.activity.data$date))
weekday.name<-c('Monday','Tuesday','Wednesday','Thursday','Friday')
imputed.activity.data$weekend<-ifelse(imputed.activity.data$weekday %in% weekday.name,'Weekday','Weekend')
imputed.interval.mean<-aggregate(steps~interval+weekend,imputed.activity.data,mean)
imputed.interval.mean<-aggregate(steps.x~interval+weekend,imputed.activity.data,mean)
par(mrow=c(1,2))
par(mfrow=c(1,2))
with(imputed.interval.mean[weekend=='Weekend'],plot(steps.x,interval,type='l',col='red'))
View(imputed.interval.mean)
with(imputed.interval.mean[imputed.interval.mean$weekend=='Weekend',],plot(steps.x,interval,type='l',col='red'))
with(imputed.interval.mean[imputed.interval.mean$weekend=='Weekday',],plot(steps.x,interval,type='l',col='green'))
par(mfrow=c(2,1))
with(imputed.interval.mean[imputed.interval.mean$weekend=='Weekend',],plot(steps.x,interval,type='l',col='red'))
with(imputed.interval.mean[imputed.interval.mean$weekend=='Weekday',],plot(steps.x,interval,type='l',col='green'))
par(mfrow=c(2,1))
with(imputed.interval.mean[imputed.interval.mean$weekend=='Weekend',],plot(interval,steps.x,type='l',col='red'))
with(imputed.interval.mean[imputed.interval.mean$weekend=='Weekday',],plot(interval,steps.x,type='l',col='green'))
par(mfrow=c(2,1),mar=c(2,2,2,2))
with(imputed.interval.mean[imputed.interval.mean$weekend=='Weekend',],plot(interval,steps.x,type='l',col='red'))
with(imputed.interval.mean[imputed.interval.mean$weekend=='Weekday',],plot(interval,steps.x,type='l',col='green'))
par(mfrow=c(2,1),mar=c(2,2,2,2))
with(imputed.interval.mean[imputed.interval.mean$weekend=='Weekend',],plot(interval,steps.x,type='l',col='red'),main='Weekends',ylab='Avg number of steps',xlab='Interval')
with(imputed.interval.mean[imputed.interval.mean$weekend=='Weekday',],plot(interval,steps.x,type='l',col='green',main='Weekdays',ylab='Avg number of steps',xlab='Interval'))
library(lattice)
with(imputed.interval.mean,xyplot(steps.x~interval|weekend,type='l',ylab='Avg number of steps',xlab='Interval'))
with(imputed.interval.mean,xyplot(steps.x~interval|weekend,type='l',ylab='Avg number of steps',xlab='Interval',layout=c(2,1)))
with(imputed.interval.mean,xyplot(steps.x~interval|weekend,type='l',ylab='Avg number of steps',xlab='Interval',layout=c(1,2)))
source('~/Documents/R Programming/Reproducible Research/Reproducible-Research-Coursera/Project1.R')
source('~/Documents/R Programming/Reproducible Research/Reproducible-Research-Coursera/Project1.R')
